name: Build and release

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

    # branches-ignore:
    #   - '**'

###############################################

jobs:
  build_all:
    name: '${{ matrix.name }}'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-13
            name: "MacOS 13 x64 clang"
            python-version: 3.11

          - os: macos-14
            name: "macOS 14"
            python-version: 3.11

          - os: ubuntu-22.04
            name: "Ubuntu 22 x64"
            python-version: 3.11

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Build pdb2pqr binary
      uses: ./scripts/build_pdb2pqr
      with:
        basedir: ${{ github.workspace }}/pdb2pqr_build

    - name: Build apbs binary
      uses: ./scripts/build_apbs
      with:
        basedir: ${{ github.workspace }}/apbs_build

    - name: Check build
      uses: ./scripts/check_build/
      with:
        apbs_build_dir: ${{ github.workspace }}/apbs_build
        pdb2pqr_build_dir: ${{ github.workspace }}/pdb2pqr_build

    - name: Build artifact
      shell: bash
      env:
        ARTIFACT_NAME: apbs_${{ runner.os }}_${{ runner.arch }}.tar.bz2
      run: |
        set -eux
        cd ${GITHUB_WORKSPACE}
        OUTPUT_DIR=${GITHUB_WORKSPACE}/apbs
        mkdir -p ${OUTPUT_DIR}

        # PDB2PQR
        INPUT_DIR=${{ github.workspace }}/pdb2pqr_build
        if [ -d $INPUT_DIR ]; then
          ls -la $INPUT_DIR
          cp $INPUT_DIR/dist/pdb2pqr ${OUTPUT_DIR}
        fi

        # APBS
        INPUT_DIR=${{ github.workspace }}/apbs_build/target/bin
        if [ -d $INPUT_DIR ]; then
          ls -la $INPUT_DIR
          cp $INPUT_DIR/apbs ${OUTPUT_DIR}
        fi

        tar cjvf ${{ env.ARTIFACT_NAME }} apbs
        ls -l ${{ env.ARTIFACT_NAME }}

    - name: Upload artifact
      env:
        ARTIFACT_NAME: apbs_${{ runner.os }}_${{ runner.arch }}.tar.bz2
      uses: actions/upload-artifact@v4
      with:
        name: apbs_${{ runner.os }}_${{ runner.arch }}
        path: ${{ env.ARTIFACT_NAME }}

###############################################

  release_build:
    needs: [build_all]
    runs-on: ubuntu-latest
    steps:
    - name: Download All Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        merge-multiple: true
    - run: |
        ls -lR

    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: artifacts/*.tar.bz2
